name: Release with packages

on:
  workflow_dispatch: # allow manual execution
  push:
    tags:
      - 'v*'

jobs:
  create_release_deb: # used to identify the output in other jobs
    name: Create Release with Debian package
    runs-on: ubuntu-latest

    permissions:
      contents: write

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt install -y qttools5-dev-tools qtchooser $(cat installer/debian/certuploader/DEBIAN/control | grep 'Depends' | cut -d: -f2 | sed -e 's/,/ /g' | sed -r 's/\([<>=.0-9]+\)//g')

      - name: Get version name for Github release title
        run: echo "VERSION=Version $(python3 -c 'import certuploader; print(certuploader.__version__)')" >> $GITHUB_ENV

      - name: Execute build
        run: cd installer/debian/ && ./build.sh

      - id: create_release
        name: Create Github release
        uses: actions/create-release@v1
        env:
          # this token is provided automatically by Actions with permissions declared above
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true # create a release draft - only the master of disaster is allowed to publish it
          prerelease: false
          release_name: ${{ env.VERSION }}
          tag_name: ${{ github.ref }}

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: installer/debian/certuploader.deb
          asset_name: certuploader.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Share compiled translation files with other runner
        uses: actions/upload-artifact@master
        with:
          name: translations
          path: lang/

  create_exe:
    name: Create Windows package
    runs-on: windows-2022
    needs: create_release_deb

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Remove lang dir
        uses: JesseTG/rm@v1.0.3
        with:
          path: lang/

      - name: Get compiled translation files
        uses: actions/download-artifact@master
        with:
          name: translations
          path: lang/

      - name: Create venv, install Python packages, compile binaries
        run: |
          python -m venv venv
          venv/Scripts/pip.exe install pyinstaller==5.13.2 .
          venv/Scripts/pyinstaller.exe certuploader.windows-setup.spec

      - name: Execute package build
        shell: cmd
        run: cd installer\windows\ && "%programfiles(x86)%\Inno Setup 6\iscc.exe" "setup.iss"

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create_release_deb.outputs.upload_url }}
          asset_path: installer/windows/certuploader-setup.exe
          asset_name: certuploader-setup.exe
          asset_content_type: application/vnd.microsoft.portable-executable
